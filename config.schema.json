{
  "pluginAlias": "midea-platform",
  "pluginType": "platform",
  "customUi": true,
  "headerDisplay": "This plugin is currently experimental and under development.  Please report [bugs](https://github.com/kovapatrik/homebridge-midea-platform/issues)",
  "footerDisplay": "For help please see the [homepage](https://github.com/kovapatrik/homebridge-midea-platform)",
  "singular": true,
  "schema": {
    "type": "object",
    "properties": {
      "refreshInterval": {
        "title": "Interval, in seconds, to query Midea devices for state",
        "type": "number",
        "minimum": 0,
        "maximum": 86400,
        "description": "Frequency that the plugin will query devices for their current state (temperature, humidity, etc.). Some Midea devices update the plugin automatically on any change, others require that the device is queried. The default is 30 seconds, the maximum is 86400 (24 hours). Setting value to 0 (zero) disables polling and updates will only be noted if devices sends it automatically."
      },
      "heartbeatInterval": {
        "title": "Interval, in seconds, to send keep-alive message to Midea devices",
        "type": "number",
        "minimum": 10,
        "maximum": 120,
        "description": "Frequency that the plugin sends a message to Midea devices to keep the network socket open. The default and minimum is 10 seconds, you can increase this up to a maximum of 120 (2 minutes). If you see socket closed messages in the log reduce this value."
      },
      "verbose": {
        "title": "Enable verbose logging",
        "type": "boolean",
        "description": "Enables additional debug logging that may help a developer identify problems when working on Midea device support. Homebridge must be running with debug enabled for any debug logging to be visible."
      },
      "logRecoverableErrors": {
        "title": "Log recoverable errors",
        "type": "boolean",
        "description": "If you see frequent warning or error messages in the log that the plugin recovers from you can suppress these messages by disabling this setting."
      },
      "uiDebug": {
        "title": "Enable debug for custom UI",
        "type": "boolean",
        "description": "Debug data for the custom UI device discovery process will be logged to the Homebridge log and Javascript console."
      },
      "devices": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "type": {
              "title": "Device Type",
              "type": "string",
              "required": true,
              "enum": [
                "Air Conditioner",
                "Dehumidifier"
              ],
              "description": "Select the type of device you are adding."
            },
            "name": {
              "title": "Device Name",
              "description": "This replaces the name provided by the Midea device.",
              "type": "string"
            },
            "id": {
              "title": "Device Identifier",
              "type": "number",
              "required": true,
              "description": "The ID of the device. This shouldn't be changed if it was added by discovery."
            },
            "advanced_options": {
              "type": "object",
              "title": "Advanced Settings",
              "expandable": true,
              "expanded": false,
              "properties": {
                "ip": {
                  "title": "IP Address",
                  "type": "string",
                  "required": false,
                  "description": "IP address of device on your local LAN. This is optional and shouldn't be changed if it was added by discovery."
                },
                "token": {
                  "title": "Device login token",
                  "type": "string",
                  "description": "Token of the device obtained from cloud. This shouldn't be changed if it was added by discovery."
                },
                "key": {
                  "title": "Device login key",
                  "type": "string",
                  "description": "Key of the device obtained from cloud. This shouldn't be changed if it was added by discovery."
                },
                "verbose": {
                  "title": "Enable verbose logging",
                  "type": "boolean",
                  "description": "Override global setting for this one device."
                },
                "logRecoverableErrors": {
                  "title": "Log recoverable errors",
                  "type": "boolean",
                  "description": "Override global setting for this one device."
                }
              }
            },
            "A1_options": {
              "title": "Dehumidifier Options",
              "type": "object",
              "condition": {
                "functionBody": "return model.devices && model.devices[arrayIndices].type === 'Dehumidifier';"
              },
              "properties": {
                "minHumidity": {
                  "title": "Minimum Relative Humidity",
                  "type": "number",
                  "minimum": 0,
                  "maximum": 100
                },
                "maxHumidity": {
                  "title": "Maximum Relative Humidity",
                  "type": "number",
                  "minimum": 0,
                  "maximum": 100
                },
                "humidityStep": {
                  "title": "Humidity Step",
                  "type": "number",
                  "enum": [
                    5,
                    10
                  ]
                }
              }
            },
            "AC_options": {
              "title": "Air Conditioner Options",
              "type": "object",
              "condition": {
                "functionBody": "return model.devices && model.devices[arrayIndices].type === 'Air Conditioner';"
              },
              "properties": {
                "swingMode": {
                  "title": "Swing Mode",
                  "description": "Set swing mode of the unit. If you AC does not support this feature then leave it on None.",
                  "type": "string",
                  "required": true,
                  "enum": [
                    "None",
                    "Vertical",
                    "Horizontal",
                    "Both"
                  ]
                },
                "outDoorTemp": {
                  "title": "Outdoor Temperature",
                  "description": "Toggles if the outdoor temperature is created with the accessory.",
                  "type": "boolean"
                },
                "audioFeedback": {
                  "title": "Audio Feedback",
                  "description": "Toggles if the unit beeps when a command is sent.",
                  "type": "boolean"
                },
                "ecoSwitch": {
                  "title": "Eco Mode Switch",
                  "description": "Toggles if the ECO mode switch is created with the accessory.",
                  "type": "boolean"
                },
                "breezeAwaySwitch": {
                  "title": "Breeze Away Mode",
                  "description": "Toggles if the breeze away mode swtich is created with the accessory.",
                  "type": "boolean"
                },
                "displaySwitch": {
                  "type": "object",
                  "properties": {
                    "flag": {
                      "title": "Display Switch",
                      "description": "Toggles if a switch, which can turn the display on or off will be created or not.",
                      "type": "boolean"
                    },
                    "command": {
                      "title": "Display Switch Alternate Command",
                      "description": "Use this if the switch display command does not work. If it doesn't work either way then you unit does not support this feature.",
                      "type": "boolean"
                    }
                  }
                },
                "minTemp": {
                  "title": "Minimum Temperature",
                  "type": "number"
                },
                "maxTemp": {
                  "title": "Maximum Temperature",
                  "type": "number"
                },
                "tempStep": {
                  "title": "Temperature Step",
                  "type": "number",
                  "enum": [
                    0.5,
                    1
                  ]
                },
                "fahrenheit": {
                  "title": "Fahrenheit",
                  "description": "Toggles if the temperature on the unit is displayed in Fahrenheit or Celsius.",
                  "type": "boolean"
                },
                "fanOnlyMode": {
                  "title": "Fan Only Mode",
                  "description": "Toggles if the fan only mode is created with the accessory.",
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    }
  },
  "layout": [
    {
      "items": [
        {
          "ref": "optional",
          "type": "fieldset",
          "expandable": true,
          "expanded": false,
          "title": "Optional Settings",
          "items": [
            "refreshInterval",
            "heartbeatInterval",
            "verbose",
            "logRecoverableErrors",
            "uiDebug"
          ]
        },
        {
          "key": "devices",
          "type": "tabarray",
          "title": "{{ value.name || 'new device' }}",
          "items": [
            "devices[].type",
            "devices[].id",
            "devices[].name",
            {
              "key": "devices[].advanced_options",
              "title": "Advanced Settings",
              "expandable": true,
              "expanded": false,
              "items": [
                "devices[].advanced_options.ip",
                "devices[].advanced_options.token",
                "devices[].advanced_options.key",
                "devices[].advanced_options.verbose",
                "devices[].advanced_options.logRecoverableErrors"
              ]
            },
            {
              "key": "devices[].A1_options",
              "expandable": true,
              "expanded": false,
              "items": [
                "devices[].A1_options.minHumidity",
                "devices[].A1_options.maxHumidity",
                "devices[].A1_options.humidityStep"
              ]
            },
            {
              "key": "devices[].AC_options",
              "expandable": true,
              "expanded": false,
              "items": [
                "devices[].AC_options.swingMode",
                "devices[].AC_options.outDoorTemp",
                "devices[].AC_options.audioFeedback",
                "devices[].AC_options.ecoSwitch",
                "devices[].AC_options.breezeAwaySwitch",
                {
                  "key": "devices[].AC_options.displaySwitch",
                  "items": [
                    "devices[].AC_options.displaySwitch.flag",
                    "devices[].AC_options.displaySwitch.command"
                  ]
                },
                "devices[].AC_options.minTemp",
                "devices[].AC_options.maxTemp",
                "devices[].AC_options.tempStep",
                "devices[].AC_options.fahrenheit",
                "devices[].AC_options.fanOnlyMode"
              ]
            }
          ]
        }
      ]
    }
  ]
}